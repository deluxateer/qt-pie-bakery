//- -----------------------------------------------------------------------------
//- This file contains markup that is specific to the landing page.
//- -----------------------------------------------------------------------------

extend base-pages/base-default

include components/button

block localVariables
  -
    //- page-specific head configurations
    const localHeadProps = {
      title: 'QT Pie Bakery',
      description: 'Bring your sweet tooth! Pie, cakes, anything baked and sweet. We have it all here.',
      keywords: 'cookies, cakes, pies, goods, pantown, local, cutie',
      //- paths of the stylesheets to use for this page
      stylesheetPaths: [
        'https://fonts.googleapis.com/css?family=Courgette|Lato:400,400i,700&display=swap',
        'css/styles.min.css',
      ],
    };
  -
    //- paths of javascript files to use for this page
    const scriptPaths = [
      'js/bundle.js',
    ];
    
    //- class to put on body tag for custom styling
  - const pageName = 'home';
    //- used to indicate this page is selected on the navbar item
  - const isHomePage = true;

//- ---------------- MARKUP FOR PAGE ----------------

prepend stylesheets
  link(rel='stylesheet' href='https://use.fontawesome.com/releases/v5.8.2/css/all.css' integrity='sha384-oS3vJWv+0UjzBfQzYUhtDYW+Pj2yciDJxpsK1OYPAYjqT085Qq/1cq5FLXAZQ7Ay' crossorigin='anonymous')

mixin parseQuote(quote)
  - const paragraphs = quote.split(/\n+/);
  each paragraph, index in paragraphs
    if index === 0 && index === paragraphs.length - 1
      p= `"${paragraph.trim()}"`
    else if index === 0 && index != paragraphs.length - 1
      p= `"${paragraph.trim()}`
    else if index === paragraphs.length - 1
      p= `${paragraph.trim()}"`
    else
      p= paragraph.trim()

mixin buildPreviewGallery(previewGalleryData)
  each itemSet in previewGalleryData
    - const { shape, image } = itemSet;
    .preview-item
      if shape
        +image(shape.url, null, true)
      if image
        +image(image.url, image.alt, true)
      else
        - throw 'You must at least have an image for this set'

mixin buildYelpReviewCards(yelpReviewData)
  each review in yelpReviewData
    - const { name, date, image, yelpReviewUrl, quote } = review;
    .yelp-review.card
      .card-content
        +image(image, name)
        .yelp-review-info
          a.yelp-link(href=yelpReviewUrl, target='_blank')
            i.fab.fa-yelp
          blockquote.yelp-review-text(cite=yelpReviewUrl)
            +parseQuote(quote)
            footer
              div= name
              span= date

block main
  //- ---------------- Hero Section ---------------- -//
  section.hero
    .container
      .hero-img
        +image('hero/macarons.jpg', 'Macarons', true, false)
      .hero-content
        .hero-info
          h1 Bring your sweet tooth
          p Pie, cakes, anything baked and sweet. We have it all here.
          a.cta.btn.btn-secondary.btn-large.btn-round(href='tel:1-111-111-1111') Call And Order
            .phone-number +1 (111) 111-1111
        p.opening-hours Opening Hours: <b>Mon-Fri:</b> 9am - 9pm / <b>Weekend:</b> 9am - 10pm
  //- ---------------- Photo Preview Section ---------------- -//
  section.photo-preview
    .preview-info
      h2 Our Beautiful Lovelies!
      p Just a taste of what we have in store, for you
    .container
      .instagram-logo
        a(href=socialMediaItems.instagram.url)
          +image('instagram-logo.png', 'Instagram Logo')
      .preview-gallery
        +buildPreviewGallery(previewShapeGallery)
      p ...and yes, we have pie.
      .pie-gallery
        +buildPreviewGallery(previewPieGallery)
  //- ---------------- Photo Preview Section ---------------- -//
  section.yelp-review-section
    h2 We Love Our Customers!
    .container
      .yelp-review-group
        +buildYelpReviewCards(yelpReviewData)
