// -----------------------------------------------------------------------------
// This file contains all application-wide Sass functions.
// -----------------------------------------------------------------------------

/// lightens a color less severly than lighten()
/// @param {Color} $color - color to tint
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
/// @author Hugo Giraudel
@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}

/// darkens a color less severly than darken()
/// @param {Color} $color - color to shade
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
/// @author Hugo Giraudel
@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}

/// sets text color to black or white depending on the background color
/// @param {Color} $bgc - background color
/// @param {Color} $on-light [#000] - text color to use for light backgrounds
/// @param {Color} $on-dark [#fff] - text color to use for dark backgrounds
/// @param {Number} $threshold [50] - percentage where color changes should occur around 
/// @return {Color}
/// @author Deluxateer
@function contrast-text($bgc, $on-light: #000, $on-dark: #fff, $threshold: 50) {
  @if (lightness($bgc) > $threshold) {
    @return $on-light;
  } @else {
    @return $on-dark;
  }
}

/// Native `url(..)` function wrapper
/// @param {String} $base - base URL for the asset
/// @param {String} $type - asset type folder (e.g. `fonts/`)
/// @param {String} $path - asset path
/// @return {Url}
/// @author Hugo Giraudel
@function asset($base, $type, $path) {
  @return url($base + $type + $path);
}

/// Returns URL to an image based on its path
/// @param {String} $path - image path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
/// @author Hugo Giraudel
@function image($path, $base: $base-url) {
  @return asset($base, 'img/', $path);
}

/// Returns URL to a font based on its path
/// @param {String} $path - font path
/// @param {String} $base [$base-url] - base URL
/// @return {Url}
/// @require $base-url
/// @author Hugo Giraudel
@function font($path, $base: $base-url) {
  @return asset($base, 'fonts/', $path);
}

/// friendlier function to work with breakpoints
/// @param {String} $desired-breakpoint - the breakpoint that will be used
/// @return {String}
/// @author Hugo Giraudel
@function breakpoint($desired-breakpoint) {
  @return map-get($breakpoints, $desired-breakpoint);
}

